/* tslint:disable */
/* eslint-disable */
/**
 * RAISE Events API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DetailMessage,
  EventsInner,
  HTTPValidationError,
} from '../models';
import {
    DetailMessageFromJSON,
    DetailMessageToJSON,
    EventsInnerFromJSON,
    EventsInnerToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models';

export interface CreateEventsV1EventsPostRequest {
    eventsInner: Array<EventsInner>;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Create Events
     */
    async createEventsV1EventsPostRaw(requestParameters: CreateEventsV1EventsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DetailMessage>> {
        if (requestParameters.eventsInner === null || requestParameters.eventsInner === undefined) {
            throw new runtime.RequiredError('eventsInner','Required parameter requestParameters.eventsInner was null or undefined when calling createEventsV1EventsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWTBearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/events`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.eventsInner.map(EventsInnerToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DetailMessageFromJSON(jsonValue));
    }

    /**
     * Create Events
     */
    async createEventsV1EventsPost(requestParameters: CreateEventsV1EventsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DetailMessage> {
        const response = await this.createEventsV1EventsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
